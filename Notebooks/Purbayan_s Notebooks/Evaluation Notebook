{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Evaluation Notebook","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"jYHbhbZqf7go","colab_type":"code","outputId":"4ee9a53e-ee28-42ea-8b65-5f5f2769d8cd","executionInfo":{"status":"ok","timestamp":1587293018386,"user_tz":-330,"elapsed":29516,"user":{"displayName":"Purbayan Chatterjee","photoUrl":"","userId":"03950332929399041610"}},"colab":{"base_uri":"https://localhost:8080/","height":122}},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Pge9BCKKuMNy","colab_type":"code","outputId":"aeb0ea69-b290-4d45-a482-4e10d1b17fb4","executionInfo":{"status":"ok","timestamp":1587293091722,"user_tz":-330,"elapsed":61831,"user":{"displayName":"Purbayan Chatterjee","photoUrl":"","userId":"03950332929399041610"}},"colab":{"base_uri":"https://localhost:8080/","height":836}},"source":["!pip uninstall tensorflow\n","!pip install tensorflow==1.14.0"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Uninstalling tensorflow-2.2.0rc3:\n","  Would remove:\n","    /usr/local/bin/estimator_ckpt_converter\n","    /usr/local/bin/saved_model_cli\n","    /usr/local/bin/tensorboard\n","    /usr/local/bin/tf_upgrade_v2\n","    /usr/local/bin/tflite_convert\n","    /usr/local/bin/toco\n","    /usr/local/bin/toco_from_protos\n","    /usr/local/lib/python3.6/dist-packages/tensorflow-2.2.0rc3.dist-info/*\n","    /usr/local/lib/python3.6/dist-packages/tensorflow/*\n","Proceed (y/n)? y\n","  Successfully uninstalled tensorflow-2.2.0rc3\n","Collecting tensorflow==1.14.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/de/f0/96fb2e0412ae9692dbf400e5b04432885f677ad6241c088ccc5fe7724d69/tensorflow-1.14.0-cp36-cp36m-manylinux1_x86_64.whl (109.2MB)\n","\u001b[K     |████████████████████████████████| 109.2MB 99kB/s \n","\u001b[?25hCollecting tensorflow-estimator<1.15.0rc0,>=1.14.0rc0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/3c/d5/21860a5b11caf0678fbc8319341b0ae21a07156911132e0e71bffed0510d/tensorflow_estimator-1.14.0-py2.py3-none-any.whl (488kB)\n","\u001b[K     |████████████████████████████████| 491kB 29.7MB/s \n","\u001b[?25hRequirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow==1.14.0) (1.1.0)\n","Requirement already satisfied: gast>=0.2.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow==1.14.0) (0.3.3)\n","Requirement already satisfied: google-pasta>=0.1.6 in /usr/local/lib/python3.6/dist-packages (from tensorflow==1.14.0) (0.2.0)\n","Requirement already satisfied: wrapt>=1.11.1 in /usr/local/lib/python3.6/dist-packages (from tensorflow==1.14.0) (1.12.1)\n","Requirement already satisfied: keras-preprocessing>=1.0.5 in /usr/local/lib/python3.6/dist-packages (from tensorflow==1.14.0) (1.1.0)\n","Collecting tensorboard<1.15.0,>=1.14.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/91/2d/2ed263449a078cd9c8a9ba50ebd50123adf1f8cfbea1492f9084169b89d9/tensorboard-1.14.0-py3-none-any.whl (3.1MB)\n","\u001b[K     |████████████████████████████████| 3.2MB 44.6MB/s \n","\u001b[?25hRequirement already satisfied: absl-py>=0.7.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow==1.14.0) (0.9.0)\n","Requirement already satisfied: numpy<2.0,>=1.14.5 in /usr/local/lib/python3.6/dist-packages (from tensorflow==1.14.0) (1.18.2)\n","Requirement already satisfied: grpcio>=1.8.6 in /usr/local/lib/python3.6/dist-packages (from tensorflow==1.14.0) (1.28.1)\n","Requirement already satisfied: protobuf>=3.6.1 in /usr/local/lib/python3.6/dist-packages (from tensorflow==1.14.0) (3.10.0)\n","Requirement already satisfied: six>=1.10.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow==1.14.0) (1.12.0)\n","Requirement already satisfied: wheel>=0.26 in /usr/local/lib/python3.6/dist-packages (from tensorflow==1.14.0) (0.34.2)\n","Requirement already satisfied: keras-applications>=1.0.6 in /usr/local/lib/python3.6/dist-packages (from tensorflow==1.14.0) (1.0.8)\n","Requirement already satisfied: astor>=0.6.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow==1.14.0) (0.8.1)\n","Requirement already satisfied: werkzeug>=0.11.15 in /usr/local/lib/python3.6/dist-packages (from tensorboard<1.15.0,>=1.14.0->tensorflow==1.14.0) (1.0.1)\n","Requirement already satisfied: setuptools>=41.0.0 in /usr/local/lib/python3.6/dist-packages (from tensorboard<1.15.0,>=1.14.0->tensorflow==1.14.0) (46.1.3)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.6/dist-packages (from tensorboard<1.15.0,>=1.14.0->tensorflow==1.14.0) (3.2.1)\n","Requirement already satisfied: h5py in /usr/local/lib/python3.6/dist-packages (from keras-applications>=1.0.6->tensorflow==1.14.0) (2.10.0)\n","Installing collected packages: tensorflow-estimator, tensorboard, tensorflow\n","  Found existing installation: tensorflow-estimator 2.2.0rc0\n","    Uninstalling tensorflow-estimator-2.2.0rc0:\n","      Successfully uninstalled tensorflow-estimator-2.2.0rc0\n","  Found existing installation: tensorboard 2.2.0\n","    Uninstalling tensorboard-2.2.0:\n","      Successfully uninstalled tensorboard-2.2.0\n","Successfully installed tensorboard-1.14.0 tensorflow-1.14.0 tensorflow-estimator-1.14.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ylrUAWUyCcrT","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":508},"outputId":"188d7daf-a1d4-4186-a16f-c41001b4e024","executionInfo":{"status":"ok","timestamp":1587293099351,"user_tz":-330,"elapsed":2270,"user":{"displayName":"Purbayan Chatterjee","photoUrl":"","userId":"03950332929399041610"}}},"source":["import tensorflow as tf\n","print(tf.__version__)"],"execution_count":3,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/dtypes.py:516: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  _np_qint8 = np.dtype([(\"qint8\", np.int8, 1)])\n","/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/dtypes.py:517: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  _np_quint8 = np.dtype([(\"quint8\", np.uint8, 1)])\n","/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/dtypes.py:518: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  _np_qint16 = np.dtype([(\"qint16\", np.int16, 1)])\n","/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/dtypes.py:519: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  _np_quint16 = np.dtype([(\"quint16\", np.uint16, 1)])\n","/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/dtypes.py:520: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  _np_qint32 = np.dtype([(\"qint32\", np.int32, 1)])\n","/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  np_resource = np.dtype([(\"resource\", np.ubyte, 1)])\n","/usr/local/lib/python3.6/dist-packages/tensorboard/compat/tensorflow_stub/dtypes.py:541: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  _np_qint8 = np.dtype([(\"qint8\", np.int8, 1)])\n","/usr/local/lib/python3.6/dist-packages/tensorboard/compat/tensorflow_stub/dtypes.py:542: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  _np_quint8 = np.dtype([(\"quint8\", np.uint8, 1)])\n","/usr/local/lib/python3.6/dist-packages/tensorboard/compat/tensorflow_stub/dtypes.py:543: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  _np_qint16 = np.dtype([(\"qint16\", np.int16, 1)])\n","/usr/local/lib/python3.6/dist-packages/tensorboard/compat/tensorflow_stub/dtypes.py:544: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  _np_quint16 = np.dtype([(\"quint16\", np.uint16, 1)])\n","/usr/local/lib/python3.6/dist-packages/tensorboard/compat/tensorflow_stub/dtypes.py:545: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  _np_qint32 = np.dtype([(\"qint32\", np.int32, 1)])\n","/usr/local/lib/python3.6/dist-packages/tensorboard/compat/tensorflow_stub/dtypes.py:550: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  np_resource = np.dtype([(\"resource\", np.ubyte, 1)])\n"],"name":"stderr"},{"output_type":"display_data","data":{"text/html":["<p style=\"color: red;\">\n","The default version of TensorFlow in Colab will switch to TensorFlow 2.x on the 27th of March, 2020.<br>\n","We recommend you <a href=\"https://www.tensorflow.org/guide/migrate\" target=\"_blank\">upgrade</a> now\n","or ensure your notebook will continue to use TensorFlow 1.x via the <code>%tensorflow_version 1.x</code> magic:\n","<a href=\"https://colab.research.google.com/notebooks/tensorflow_version.ipynb\" target=\"_blank\">more info</a>.</p>\n"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["1.14.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Te5ZHDSXBPkt","colab_type":"code","outputId":"0d647bda-7401-49a6-ab17-449e978ee07c","executionInfo":{"status":"ok","timestamp":1587293099352,"user_tz":-330,"elapsed":1962,"user":{"displayName":"Purbayan Chatterjee","photoUrl":"","userId":"03950332929399041610"}},"colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["import gym\n","import random\n","import numpy as np\n","from statistics import median, mean\n","from collections import Counter\n","\n","from matplotlib import pyplot as plt\n","from IPython.display import clear_output\n","\n","import keras\n","from keras import models\n","from keras.layers import Dense, Dropout\n","from keras.models import Sequential\n","from keras.layers import Dense, Dropout, Activation\n","from keras.optimizers import SGD\n","from keras.models import load_model\n","\n","from sklearn.model_selection import train_test_split\n","print(tf.__version__)"],"execution_count":4,"outputs":[{"output_type":"stream","text":["Using TensorFlow backend.\n"],"name":"stderr"},{"output_type":"stream","text":["1.14.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"wXyjjhisf7lY","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":343},"outputId":"18ad0abe-f11e-4bfa-ea57-68968b8ae46a","executionInfo":{"status":"ok","timestamp":1587293131488,"user_tz":-330,"elapsed":6146,"user":{"displayName":"Purbayan Chatterjee","photoUrl":"","userId":"03950332929399041610"}}},"source":["!pip install keras-rl"],"execution_count":5,"outputs":[{"output_type":"stream","text":["Collecting keras-rl\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/ab/87/4b57eff8e4bd834cea0a75cd6c58198c9e42be29b600db9c14fafa72ec07/keras-rl-0.4.2.tar.gz (40kB)\n","\r\u001b[K     |████████                        | 10kB 20.1MB/s eta 0:00:01\r\u001b[K     |████████████████▏               | 20kB 18.9MB/s eta 0:00:01\r\u001b[K     |████████████████████████▎       | 30kB 21.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 40kB 6.0MB/s \n","\u001b[?25hRequirement already satisfied: keras>=2.0.7 in /usr/local/lib/python3.6/dist-packages (from keras-rl) (2.3.1)\n","Requirement already satisfied: keras-preprocessing>=1.0.5 in /usr/local/lib/python3.6/dist-packages (from keras>=2.0.7->keras-rl) (1.1.0)\n","Requirement already satisfied: h5py in /usr/local/lib/python3.6/dist-packages (from keras>=2.0.7->keras-rl) (2.10.0)\n","Requirement already satisfied: numpy>=1.9.1 in /usr/local/lib/python3.6/dist-packages (from keras>=2.0.7->keras-rl) (1.18.2)\n","Requirement already satisfied: six>=1.9.0 in /usr/local/lib/python3.6/dist-packages (from keras>=2.0.7->keras-rl) (1.12.0)\n","Requirement already satisfied: keras-applications>=1.0.6 in /usr/local/lib/python3.6/dist-packages (from keras>=2.0.7->keras-rl) (1.0.8)\n","Requirement already satisfied: scipy>=0.14 in /usr/local/lib/python3.6/dist-packages (from keras>=2.0.7->keras-rl) (1.4.1)\n","Requirement already satisfied: pyyaml in /usr/local/lib/python3.6/dist-packages (from keras>=2.0.7->keras-rl) (3.13)\n","Building wheels for collected packages: keras-rl\n","  Building wheel for keras-rl (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for keras-rl: filename=keras_rl-0.4.2-cp36-none-any.whl size=48380 sha256=7b9f2b0163162a13cdbeac406df8b49524d4c112a90ba504bce4a89832f0aff1\n","  Stored in directory: /root/.cache/pip/wheels/7d/4d/84/9254c9f2e8f51865cb0dac8e79da85330c735551d31f73c894\n","Successfully built keras-rl\n","Installing collected packages: keras-rl\n","Successfully installed keras-rl-0.4.2\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"1OXA-K2xsoG1","colab_type":"code","outputId":"147b52c1-1951-40af-c460-7334ef12928d","executionInfo":{"status":"ok","timestamp":1587293200411,"user_tz":-330,"elapsed":16087,"user":{"displayName":"Purbayan Chatterjee","photoUrl":"","userId":"03950332929399041610"}},"colab":{"base_uri":"https://localhost:8080/","height":119}},"source":["TASK_NUM = 1\n","MODEL_NUM = 2\n","\n","gym_dir = \"/usr/local/lib/python3.6/dist-packages/gym/envs/classic_control/\"\n","task_dir = \"/content/drive/My Drive/ML Major Project/Question/\"\n","model_dir = \"/content/drive/My Drive/ML Major Project/Models/Purbayan's Models/Task\"+str(TASK_NUM)+\"/\"\n","\n","gym_file = gym_dir+'cartpole.py'\n","task_file = task_dir+'task'+str(TASK_NUM)+'.py'\n","task_file_copy = task_dir+'cartpole.py'\n","\n","model_count = MODEL_NUM\n","\n","model_file = model_dir + 'Model#' + str(model_count) + '.h5'\n","plot_file = model_dir + 'Plot#' + str(model_count) + '.png'\n","\n","!rm \"$gym_file\"\n","!cp \"$task_file\" \"$task_file_copy\"\n","!mv \"$task_file_copy\" \"$gym_dir\"\n","\n","#check for friction (TASK1, TASK2, TASK3)\n","!cat \"$gym_file\" | head -n30 | tail -n2 \n","\n","#check for uncommented force error (TASK2, TASK3)\n","!cat \"$gym_file\" | head -n25 | tail -n2\n","\n","#check for uncommented noise (TASK3)\n","!cat \"$gym_file\" | head -n69 | tail -n2"],"execution_count":7,"outputs":[{"output_type":"stream","text":["\t\tself.frictioncart = 5e-4 # AA Added cart friction\n","\t\tself.frictionpole = 2e-6 # AA Added cart friction\n","\t\tself.force_mag = 10.0\n","\t\t#self.force_mag = 10.0*(1+self.np_random.uniform(low=-0.10, high=0.10))\n","\t\tnoise = 0\n","\t\t#noise = self.np_random.uniform(low=-0.10, high=0.10) \n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"UYARHvr8vcYi","colab_type":"code","colab":{}},"source":["#HYPERPARAMETERS\n","random.seed(69)\n","\n","LR = 1e-3\n","goal_steps = 500\n","score_requirement = 50\n","initial_games = 10000"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"UJeuI8rcf7WF","colab_type":"code","outputId":"fbffca61-df0c-4d8f-8d1f-68dd9077374c","executionInfo":{"status":"ok","timestamp":1587293209732,"user_tz":-330,"elapsed":1621,"user":{"displayName":"Purbayan Chatterjee","photoUrl":"","userId":"03950332929399041610"}},"colab":{"base_uri":"https://localhost:8080/","height":139}},"source":["env = gym.make(\"CartPole-v1\")\n","env.reset()"],"execution_count":9,"outputs":[{"output_type":"stream","text":["CartPoleEnv - Version 0.2.0, Noise case: 1\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/gym/logger.py:30: UserWarning: \u001b[33mWARN: Box bound precision lowered by casting to float32\u001b[0m\n","  warnings.warn(colorize('%s: %s'%('WARN', msg % args), 'yellow'))\n","/usr/local/lib/python3.6/dist-packages/gym/logger.py:30: UserWarning: \u001b[33mWARN: Environment '<class 'gym.envs.classic_control.cartpole.CartPoleEnv'>' has deprecated methods '_step' and '_reset' rather than 'step' and 'reset'. Compatibility code invoked. Set _gym_disable_underscore_compat = True to disable this behavior.\u001b[0m\n","  warnings.warn(colorize('%s: %s'%('WARN', msg % args), 'yellow'))\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/plain":["array([-0.02729752,  0.01151602, -0.04155068,  0.04877267])"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"Sz8QwoKmnWD7","colab_type":"code","colab":{}},"source":["model = load_model(model_file)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"700f29c0-77b5-4a1e-fe39-e032c20afbd7","executionInfo":{"status":"ok","timestamp":1587293213871,"user_tz":-330,"elapsed":1790,"user":{"displayName":"Purbayan Chatterjee","photoUrl":"","userId":"03950332929399041610"}},"id":"hF8eEOLxL78m","colab":{"base_uri":"https://localhost:8080/","height":357}},"source":["model.summary()"],"execution_count":11,"outputs":[{"output_type":"stream","text":["Model: \"model_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","input_1 (InputLayer)         (None, 1, 4)              0         \n","_________________________________________________________________\n","flatten_1 (Flatten)          (None, 4)                 0         \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 16)                80        \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 16)                272       \n","_________________________________________________________________\n","dense_3 (Dense)              (None, 16)                272       \n","_________________________________________________________________\n","dense_4 (Dense)              (None, 2)                 34        \n","=================================================================\n","Total params: 658\n","Trainable params: 658\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"1xlDx2i9C3S2","colab_type":"code","colab":{}},"source":["# scores = []\n","# choices = []\n","# reward_list=[]\n","# for each_game in range(100):\n","#     score = 0\n","#     game_memory = []\n","#     prev_obs = []\n","#     env.reset()\n","#     for _ in range(500):\n","#         #env.render()\n","    \n","        \n","#         if len(prev_obs)==0:\n","#             action = random.randrange(0,2)\n","#         else:\n","#             action = np.argmax(model.predict(prev_obs.reshape(-1,4))[0])\n","#             #print(prev_obs)            \n","        \n","#         choices.append(action)\n","#         #if len(prev_obs)!=0:    \n","#             #print(model.predict(prev_obs.reshape(-1,len(prev_obs),1))[0])\n","            \n","#         new_observation, reward, done, info = env.step(action)\n","#         prev_obs = new_observation\n","#         game_memory.append([new_observation, action])\n","#         score+=reward\n","#         if done: \n","#             break\n","#     scores.append(score)\n","\n","# print('Average Score:',sum(scores)/len(scores))\n","# print('choice 1:{}  choice 0:{}'.format(choices.count(1)/len(choices),choices.count(0)/len(choices)))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"lVhdH68KJt5U","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}