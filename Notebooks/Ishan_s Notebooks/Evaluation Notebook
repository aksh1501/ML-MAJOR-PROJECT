{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Evaluation Notebook","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"jYHbhbZqf7go","colab_type":"code","outputId":"b22a7829-e120-4037-caa0-c6cf057251de","executionInfo":{"status":"ok","timestamp":1587460119040,"user_tz":-330,"elapsed":1230,"user":{"displayName":"Akshit Sharma","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7mEzo4Xl5HM1PVpZcT_xG8Y80JRpzG7zoIty9w=s64","userId":"12957378049941848214"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":17,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Te5ZHDSXBPkt","colab_type":"code","colab":{}},"source":["import gym\n","import random\n","import numpy as np\n","from statistics import median, mean\n","from collections import Counter\n","\n","from matplotlib import pyplot as plt\n","from IPython.display import clear_output\n","\n","import keras\n","from keras import models\n","from keras.layers import Dense, Dropout\n","from keras.models import Sequential\n","from keras.layers import Dense, Dropout, Activation\n","from keras.optimizers import SGD\n","from keras.models import load_model\n","\n","from sklearn.model_selection import train_test_split"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"1OXA-K2xsoG1","colab_type":"code","outputId":"a775bd1f-00f1-478a-94b0-c91a6c9e0d19","executionInfo":{"status":"ok","timestamp":1587460132806,"user_tz":-330,"elapsed":14911,"user":{"displayName":"Akshit Sharma","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7mEzo4Xl5HM1PVpZcT_xG8Y80JRpzG7zoIty9w=s64","userId":"12957378049941848214"}},"colab":{"base_uri":"https://localhost:8080/","height":119}},"source":["TASK_NUM = 3\n","MODEL_NUM = 5\n","\n","gym_dir = \"/usr/local/lib/python3.6/dist-packages/gym/envs/classic_control/\"\n","task_dir = \"/content/drive/My Drive/ML Major Project/Question/\"\n","model_dir = \"/content/drive/My Drive/ML Major Project/Models/Ishan's Models/Task\"+str(TASK_NUM)+\"/\"\n","\n","gym_file = gym_dir+'cartpole.py'\n","task_file = task_dir+'task'+str(TASK_NUM)+'.py'\n","task_file_copy = task_dir+'cartpole.py'\n","\n","model_count = MODEL_NUM\n","\n","model_file = model_dir + 'Model#' + str(model_count) + '.h5'\n","\n","!rm \"$gym_file\"\n","!cp \"$task_file\" \"$task_file_copy\"\n","!mv \"$task_file_copy\" \"$gym_dir\"\n","\n","#check for friction (TASK1, TASK2, TASK3)\n","!cat \"$gym_file\" | head -n30 | tail -n2 \n","\n","#check for uncommented force error (TASK2, TASK3)\n","!cat \"$gym_file\" | head -n25 | tail -n2\n","\n","#check for uncommented noise (TASK3)\n","!cat \"$gym_file\" | head -n69 | tail -n2"],"execution_count":19,"outputs":[{"output_type":"stream","text":["\t\tself.frictioncart = 5e-4 # AA Added cart friction\n","\t\tself.frictionpole = 2e-6 # AA Added cart friction\n","\t\t#self.force_mag = 10.0\n","\t\tself.force_mag = 10.0*(1+self.np_random.uniform(low=-0.30, high=0.30))\n","\t\t#noise = 0\n","\t\tnoise = self.np_random.uniform(low=-0.30, high=0.30) \n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"UYARHvr8vcYi","colab_type":"code","colab":{}},"source":["#HYPERPARAMETERS\n","random.seed(69)\n","\n","goal_steps = 500\n","num_episodes = 1000"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"UJeuI8rcf7WF","colab_type":"code","outputId":"5ba89e31-7535-465f-d590-3b6527831737","executionInfo":{"status":"ok","timestamp":1587460132809,"user_tz":-330,"elapsed":14890,"user":{"displayName":"Akshit Sharma","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7mEzo4Xl5HM1PVpZcT_xG8Y80JRpzG7zoIty9w=s64","userId":"12957378049941848214"}},"colab":{"base_uri":"https://localhost:8080/","height":85}},"source":["env = gym.make(\"CartPole-v1\")\n","env.reset()"],"execution_count":21,"outputs":[{"output_type":"stream","text":["CartPoleEnv - Version 0.2.0, Noise case: 1\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/gym/logger.py:30: UserWarning: \u001b[33mWARN: Box bound precision lowered by casting to float32\u001b[0m\n","  warnings.warn(colorize('%s: %s'%('WARN', msg % args), 'yellow'))\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/plain":["array([-0.00234461, -0.03280553,  0.03028038, -0.00881914])"]},"metadata":{"tags":[]},"execution_count":21}]},{"cell_type":"code","metadata":{"id":"Sz8QwoKmnWD7","colab_type":"code","colab":{}},"source":["model = load_model(model_file)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"colab_type":"code","outputId":"9b2619e5-e42b-4da7-97aa-cd34f14625c9","executionInfo":{"status":"ok","timestamp":1587460134112,"user_tz":-330,"elapsed":16163,"user":{"displayName":"Akshit Sharma","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7mEzo4Xl5HM1PVpZcT_xG8Y80JRpzG7zoIty9w=s64","userId":"12957378049941848214"}},"id":"hF8eEOLxL78m","colab":{"base_uri":"https://localhost:8080/","height":391}},"source":["model.summary()"],"execution_count":23,"outputs":[{"output_type":"stream","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","dense_1 (Dense)              (None, 32)                160       \n","_________________________________________________________________\n","activation_1 (Activation)    (None, 32)                0         \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 32)                1056      \n","_________________________________________________________________\n","activation_2 (Activation)    (None, 32)                0         \n","_________________________________________________________________\n","dense_3 (Dense)              (None, 32)                1056      \n","_________________________________________________________________\n","activation_3 (Activation)    (None, 32)                0         \n","_________________________________________________________________\n","dense_4 (Dense)              (None, 2)                 66        \n","=================================================================\n","Total params: 2,338\n","Trainable params: 2,338\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"1xlDx2i9C3S2","colab_type":"code","outputId":"3bb46a8d-0110-4e50-859e-57b3a45dc16b","executionInfo":{"status":"ok","timestamp":1587460550520,"user_tz":-330,"elapsed":432544,"user":{"displayName":"Akshit Sharma","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjT7mEzo4Xl5HM1PVpZcT_xG8Y80JRpzG7zoIty9w=s64","userId":"12957378049941848214"}},"colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["scores = []\n","choices = []\n","for each_game in range(num_episodes):\n","    score = 0\n","    # game_memory = []\n","    prev_obs = []\n","    env.reset()\n","    for _ in range(goal_steps):\n","        #env.render()\n","        if len(prev_obs)==0:\n","            action = random.randrange(0,2)\n","        else:\n","            action = np.argmax(model.predict(prev_obs.reshape(-1,4))[0])\n","        \n","        choices.append(action)\n","            \n","        new_observation, reward, done, info = env.step(action)\n","        prev_obs = new_observation\n","        # game_memory.append([new_observation, action])\n","        score+=reward\n","        if done: \n","            break\n","    scores.append(score)\n","\n","print('Average Score:',sum(scores)/len(scores))\n","print('choice 1:{}  choice 0:{}'.format(choices.count(1)/len(choices),choices.count(0)/len(choices)))"],"execution_count":24,"outputs":[{"output_type":"stream","text":["Average Score: 500.0\n","choice 1:0.5  choice 0:0.5\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"lVhdH68KJt5U","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}